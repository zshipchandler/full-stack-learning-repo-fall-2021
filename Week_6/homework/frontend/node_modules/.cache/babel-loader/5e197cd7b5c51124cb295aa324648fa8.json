{"ast":null,"code":"/*! firebase-admin v10.0.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultNamespace = exports.FirebaseNamespace = exports.FirebaseNamespaceInternals = void 0;\n\nvar lifecycle_1 = require(\"./lifecycle\");\n\nvar credential_factory_1 = require(\"./credential-factory\");\n\nvar index_1 = require(\"../utils/index\");\n/**\n * Internals of a FirebaseNamespace instance.\n */\n\n\nvar FirebaseNamespaceInternals =\n/** @class */\nfunction () {\n  function FirebaseNamespaceInternals(appStore) {\n    this.appStore = appStore;\n  }\n  /**\n   * Initializes the App instance.\n   *\n   * @param options - Optional options for the App instance. If none present will try to initialize\n   *   from the FIREBASE_CONFIG environment variable. If the environment variable contains a string\n   *   that starts with '{' it will be parsed as JSON, otherwise it will be assumed to be pointing\n   *   to a file.\n   * @param appName - Optional name of the FirebaseApp instance.\n   *\n   * @returns A new App instance.\n   */\n\n\n  FirebaseNamespaceInternals.prototype.initializeApp = function (options, appName) {\n    var app = this.appStore.initializeApp(options, appName);\n    return extendApp(app);\n  };\n  /**\n   * Returns the App instance with the provided name (or the default App instance\n   * if no name is provided).\n   *\n   * @param appName - Optional name of the FirebaseApp instance to return.\n   * @returns The App instance which has the provided name.\n   */\n\n\n  FirebaseNamespaceInternals.prototype.app = function (appName) {\n    var app = this.appStore.getApp(appName);\n    return extendApp(app);\n  };\n\n  Object.defineProperty(FirebaseNamespaceInternals.prototype, \"apps\", {\n    /*\n     * Returns an array of all the non-deleted App instances.\n     */\n    get: function () {\n      return this.appStore.getApps().map(function (app) {\n        return extendApp(app);\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return FirebaseNamespaceInternals;\n}();\n\nexports.FirebaseNamespaceInternals = FirebaseNamespaceInternals;\nvar firebaseCredential = {\n  cert: credential_factory_1.cert,\n  refreshToken: credential_factory_1.refreshToken,\n  applicationDefault: credential_factory_1.applicationDefault\n};\n/**\n * Global Firebase context object.\n */\n\nvar FirebaseNamespace =\n/** @class */\nfunction () {\n  /* tslint:enable */\n  function FirebaseNamespace(appStore) {\n    // Hack to prevent Babel from modifying the object returned as the default admin namespace.\n\n    /* tslint:disable:variable-name */\n    this.__esModule = true;\n    /* tslint:enable:variable-name */\n\n    this.credential = firebaseCredential;\n    this.SDK_VERSION = index_1.getSdkVersion();\n    /* tslint:disable */\n    // TODO(jwenger): Database is the only consumer of firebase.Promise. We should update it to use\n    // use the native Promise and then remove this.\n\n    this.Promise = Promise;\n    this.INTERNAL = new FirebaseNamespaceInternals(appStore !== null && appStore !== void 0 ? appStore : new lifecycle_1.AppStore());\n  }\n\n  Object.defineProperty(FirebaseNamespace.prototype, \"auth\", {\n    /**\n     * Gets the `Auth` service namespace. The returned namespace can be used to get the\n     * `Auth` service for the default app or an explicitly specified app.\n     */\n    get: function () {\n      var _this = this;\n\n      var fn = function (app) {\n        return _this.ensureApp(app).auth();\n      };\n\n      var auth = require('../auth/auth').Auth;\n\n      return Object.assign(fn, {\n        Auth: auth\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseNamespace.prototype, \"database\", {\n    /**\n     * Gets the `Database` service namespace. The returned namespace can be used to get the\n     * `Database` service for the default app or an explicitly specified app.\n     */\n    get: function () {\n      var _this = this;\n\n      var fn = function (app) {\n        return _this.ensureApp(app).database();\n      }; // eslint-disable-next-line @typescript-eslint/no-var-requires\n\n\n      return Object.assign(fn, require('@firebase/database-compat/standalone'));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseNamespace.prototype, \"messaging\", {\n    /**\n     * Gets the `Messaging` service namespace. The returned namespace can be used to get the\n     * `Messaging` service for the default app or an explicitly specified app.\n     */\n    get: function () {\n      var _this = this;\n\n      var fn = function (app) {\n        return _this.ensureApp(app).messaging();\n      };\n\n      var messaging = require('../messaging/messaging').Messaging;\n\n      return Object.assign(fn, {\n        Messaging: messaging\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseNamespace.prototype, \"storage\", {\n    /**\n     * Gets the `Storage` service namespace. The returned namespace can be used to get the\n     * `Storage` service for the default app or an explicitly specified app.\n     */\n    get: function () {\n      var _this = this;\n\n      var fn = function (app) {\n        return _this.ensureApp(app).storage();\n      };\n\n      var storage = require('../storage/storage').Storage;\n\n      return Object.assign(fn, {\n        Storage: storage\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseNamespace.prototype, \"firestore\", {\n    /**\n     * Gets the `Firestore` service namespace. The returned namespace can be used to get the\n     * `Firestore` service for the default app or an explicitly specified app.\n     */\n    get: function () {\n      var _this = this;\n\n      var fn = function (app) {\n        return _this.ensureApp(app).firestore();\n      }; // eslint-disable-next-line @typescript-eslint/no-var-requires\n\n\n      var firestore = require('@google-cloud/firestore');\n\n      fn = Object.assign(fn, firestore.Firestore); // `v1beta1` and `v1` are lazy-loaded in the Firestore SDK. We use the same trick here\n      // to avoid triggering this lazy-loading upon initialization.\n\n      Object.defineProperty(fn, 'v1beta1', {\n        get: function () {\n          return firestore.v1beta1;\n        }\n      });\n      Object.defineProperty(fn, 'v1', {\n        get: function () {\n          return firestore.v1;\n        }\n      });\n      return fn;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseNamespace.prototype, \"machineLearning\", {\n    /**\n     * Gets the `MachineLearning` service namespace. The returned namespace can be\n     * used to get the `MachineLearning` service for the default app or an\n     * explicityly specified app.\n     */\n    get: function () {\n      var _this = this;\n\n      var fn = function (app) {\n        return _this.ensureApp(app).machineLearning();\n      };\n\n      var machineLearning = require('../machine-learning/machine-learning').MachineLearning;\n\n      return Object.assign(fn, {\n        MachineLearning: machineLearning\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseNamespace.prototype, \"installations\", {\n    /**\n     * Gets the `Installations` service namespace. The returned namespace can be used to get the\n     * `Installations` service for the default app or an explicitly specified app.\n     */\n    get: function () {\n      var _this = this;\n\n      var fn = function (app) {\n        return _this.ensureApp(app).installations();\n      };\n\n      var installations = require('../installations/installations').Installations;\n\n      return Object.assign(fn, {\n        Installations: installations\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseNamespace.prototype, \"instanceId\", {\n    /**\n     * Gets the `InstanceId` service namespace. The returned namespace can be used to get the\n     * `Instance` service for the default app or an explicitly specified app.\n     */\n    get: function () {\n      var _this = this;\n\n      var fn = function (app) {\n        return _this.ensureApp(app).instanceId();\n      };\n\n      var instanceId = require('../instance-id/instance-id').InstanceId;\n\n      return Object.assign(fn, {\n        InstanceId: instanceId\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseNamespace.prototype, \"projectManagement\", {\n    /**\n     * Gets the `ProjectManagement` service namespace. The returned namespace can be used to get the\n     * `ProjectManagement` service for the default app or an explicitly specified app.\n     */\n    get: function () {\n      var _this = this;\n\n      var fn = function (app) {\n        return _this.ensureApp(app).projectManagement();\n      };\n\n      var projectManagement = require('../project-management/project-management').ProjectManagement;\n\n      return Object.assign(fn, {\n        ProjectManagement: projectManagement\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseNamespace.prototype, \"securityRules\", {\n    /**\n     * Gets the `SecurityRules` service namespace. The returned namespace can be used to get the\n     * `SecurityRules` service for the default app or an explicitly specified app.\n     */\n    get: function () {\n      var _this = this;\n\n      var fn = function (app) {\n        return _this.ensureApp(app).securityRules();\n      };\n\n      var securityRules = require('../security-rules/security-rules').SecurityRules;\n\n      return Object.assign(fn, {\n        SecurityRules: securityRules\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseNamespace.prototype, \"remoteConfig\", {\n    /**\n     * Gets the `RemoteConfig` service namespace. The returned namespace can be used to get the\n     * `RemoteConfig` service for the default app or an explicitly specified app.\n     */\n    get: function () {\n      var _this = this;\n\n      var fn = function (app) {\n        return _this.ensureApp(app).remoteConfig();\n      };\n\n      var remoteConfig = require('../remote-config/remote-config').RemoteConfig;\n\n      return Object.assign(fn, {\n        RemoteConfig: remoteConfig\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseNamespace.prototype, \"appCheck\", {\n    /**\n     * Gets the `AppCheck` service namespace. The returned namespace can be used to get the\n     * `AppCheck` service for the default app or an explicitly specified app.\n     */\n    get: function () {\n      var _this = this;\n\n      var fn = function (app) {\n        return _this.ensureApp(app).appCheck();\n      };\n\n      var appCheck = require('../app-check/app-check').AppCheck;\n\n      return Object.assign(fn, {\n        AppCheck: appCheck\n      });\n    },\n    enumerable: false,\n    configurable: true\n  }); // TODO: Change the return types to app.App in the following methods.\n\n  /**\n   * Initializes the FirebaseApp instance.\n   *\n   * @param options - Optional options for the FirebaseApp instance.\n   *   If none present will try to initialize from the FIREBASE_CONFIG environment variable.\n   *   If the environment variable contains a string that starts with '{' it will be parsed as JSON,\n   *   otherwise it will be assumed to be pointing to a file.\n   * @param appName - Optional name of the FirebaseApp instance.\n   *\n   * @returns A new FirebaseApp instance.\n   */\n\n  FirebaseNamespace.prototype.initializeApp = function (options, appName) {\n    return this.INTERNAL.initializeApp(options, appName);\n  };\n  /**\n   * Returns the FirebaseApp instance with the provided name (or the default FirebaseApp instance\n   * if no name is provided).\n   *\n   * @param appName - Optional name of the FirebaseApp instance to return.\n   * @returns The FirebaseApp instance which has the provided name.\n   */\n\n\n  FirebaseNamespace.prototype.app = function (appName) {\n    return this.INTERNAL.app(appName);\n  };\n\n  Object.defineProperty(FirebaseNamespace.prototype, \"apps\", {\n    /*\n     * Returns an array of all the non-deleted FirebaseApp instances.\n     */\n    get: function () {\n      return this.INTERNAL.apps;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  FirebaseNamespace.prototype.ensureApp = function (app) {\n    if (typeof app === 'undefined') {\n      app = this.app();\n    }\n\n    return app;\n  };\n\n  return FirebaseNamespace;\n}();\n\nexports.FirebaseNamespace = FirebaseNamespace;\n/**\n * In order to maintain backward compatibility, we instantiate a default namespace instance in\n * this module, and delegate all app lifecycle operations to it. In a future implementation where\n * the old admin namespace is no longer supported, we should remove this.\n *\n * @internal\n */\n\nexports.defaultNamespace = new FirebaseNamespace(lifecycle_1.defaultAppStore);\n\nfunction extendApp(app) {\n  var result = app;\n\n  if (result.__extended) {\n    return result;\n  }\n\n  result.auth = function () {\n    var fn = require('../auth/index').getAuth;\n\n    return fn(app);\n  };\n\n  result.appCheck = function () {\n    var fn = require('../app-check/index').getAppCheck;\n\n    return fn(app);\n  };\n\n  result.database = function (url) {\n    var fn = require('../database/index').getDatabaseWithUrl;\n\n    return fn(url, app);\n  };\n\n  result.messaging = function () {\n    var fn = require('../messaging/index').getMessaging;\n\n    return fn(app);\n  };\n\n  result.storage = function () {\n    var fn = require('../storage/index').getStorage;\n\n    return fn(app);\n  };\n\n  result.firestore = function () {\n    var fn = require('../firestore/index').getFirestore;\n\n    return fn(app);\n  };\n\n  result.instanceId = function () {\n    var fn = require('../instance-id/index').getInstanceId;\n\n    return fn(app);\n  };\n\n  result.installations = function () {\n    var fn = require('../installations/index').getInstallations;\n\n    return fn(app);\n  };\n\n  result.machineLearning = function () {\n    var fn = require('../machine-learning/index').getMachineLearning;\n\n    return fn(app);\n  };\n\n  result.projectManagement = function () {\n    var fn = require('../project-management/index').getProjectManagement;\n\n    return fn(app);\n  };\n\n  result.securityRules = function () {\n    var fn = require('../security-rules/index').getSecurityRules;\n\n    return fn(app);\n  };\n\n  result.remoteConfig = function () {\n    var fn = require('../remote-config/index').getRemoteConfig;\n\n    return fn(app);\n  };\n\n  result.__extended = true;\n  return result;\n}","map":{"version":3,"sources":["/Users/zarashipchandler/git_dir/TPEO/Week_6/homework/frontend/node_modules/firebase-admin/lib/app/firebase-namespace.js"],"names":["Object","defineProperty","exports","value","defaultNamespace","FirebaseNamespace","FirebaseNamespaceInternals","lifecycle_1","require","credential_factory_1","index_1","appStore","prototype","initializeApp","options","appName","app","extendApp","getApp","get","getApps","map","enumerable","configurable","firebaseCredential","cert","refreshToken","applicationDefault","__esModule","credential","SDK_VERSION","getSdkVersion","Promise","INTERNAL","AppStore","_this","fn","ensureApp","auth","Auth","assign","database","messaging","Messaging","storage","Storage","firestore","Firestore","v1beta1","v1","machineLearning","MachineLearning","installations","Installations","instanceId","InstanceId","projectManagement","ProjectManagement","securityRules","SecurityRules","remoteConfig","RemoteConfig","appCheck","AppCheck","apps","defaultAppStore","result","__extended","getAuth","getAppCheck","url","getDatabaseWithUrl","getMessaging","getStorage","getFirestore","getInstanceId","getInstallations","getMachineLearning","getProjectManagement","getSecurityRules","getRemoteConfig"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2BF,OAAO,CAACG,iBAAR,GAA4BH,OAAO,CAACI,0BAAR,GAAqC,KAAK,CAAjG;;AACA,IAAIC,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIC,oBAAoB,GAAGD,OAAO,CAAC,sBAAD,CAAlC;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,gBAAD,CAArB;AACA;AACA;AACA;;;AACA,IAAIF,0BAA0B;AAAG;AAAe,YAAY;AACxD,WAASA,0BAAT,CAAoCK,QAApC,EAA8C;AAC1C,SAAKA,QAAL,GAAgBA,QAAhB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIL,EAAAA,0BAA0B,CAACM,SAA3B,CAAqCC,aAArC,GAAqD,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AAC7E,QAAIC,GAAG,GAAG,KAAKL,QAAL,CAAcE,aAAd,CAA4BC,OAA5B,EAAqCC,OAArC,CAAV;AACA,WAAOE,SAAS,CAACD,GAAD,CAAhB;AACH,GAHD;AAIA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIV,EAAAA,0BAA0B,CAACM,SAA3B,CAAqCI,GAArC,GAA2C,UAAUD,OAAV,EAAmB;AAC1D,QAAIC,GAAG,GAAG,KAAKL,QAAL,CAAcO,MAAd,CAAqBH,OAArB,CAAV;AACA,WAAOE,SAAS,CAACD,GAAD,CAAhB;AACH,GAHD;;AAIAhB,EAAAA,MAAM,CAACC,cAAP,CAAsBK,0BAA0B,CAACM,SAAjD,EAA4D,MAA5D,EAAoE;AAChE;AACR;AACA;AACQO,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKR,QAAL,CAAcS,OAAd,GAAwBC,GAAxB,CAA4B,UAAUL,GAAV,EAAe;AAAE,eAAOC,SAAS,CAACD,GAAD,CAAhB;AAAwB,OAArE,CAAP;AACH,KAN+D;AAOhEM,IAAAA,UAAU,EAAE,KAPoD;AAQhEC,IAAAA,YAAY,EAAE;AARkD,GAApE;AAUA,SAAOjB,0BAAP;AACH,CAzC+C,EAAhD;;AA0CAJ,OAAO,CAACI,0BAAR,GAAqCA,0BAArC;AACA,IAAIkB,kBAAkB,GAAG;AACrBC,EAAAA,IAAI,EAAEhB,oBAAoB,CAACgB,IADN;AACYC,EAAAA,YAAY,EAAEjB,oBAAoB,CAACiB,YAD/C;AAC6DC,EAAAA,kBAAkB,EAAElB,oBAAoB,CAACkB;AADtG,CAAzB;AAGA;AACA;AACA;;AACA,IAAItB,iBAAiB;AAAG;AAAe,YAAY;AAC/C;AACA,WAASA,iBAAT,CAA2BM,QAA3B,EAAqC;AACjC;;AACA;AACA,SAAKiB,UAAL,GAAkB,IAAlB;AACA;;AACA,SAAKC,UAAL,GAAkBL,kBAAlB;AACA,SAAKM,WAAL,GAAmBpB,OAAO,CAACqB,aAAR,EAAnB;AACA;AACA;AACA;;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,QAAL,GAAgB,IAAI3B,0BAAJ,CAA+BK,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2CA,QAA3C,GAAsD,IAAIJ,WAAW,CAAC2B,QAAhB,EAArF,CAAhB;AACH;;AACDlC,EAAAA,MAAM,CAACC,cAAP,CAAsBI,iBAAiB,CAACO,SAAxC,EAAmD,MAAnD,EAA2D;AACvD;AACR;AACA;AACA;AACQO,IAAAA,GAAG,EAAE,YAAY;AACb,UAAIgB,KAAK,GAAG,IAAZ;;AACA,UAAIC,EAAE,GAAG,UAAUpB,GAAV,EAAe;AACpB,eAAOmB,KAAK,CAACE,SAAN,CAAgBrB,GAAhB,EAAqBsB,IAArB,EAAP;AACH,OAFD;;AAGA,UAAIA,IAAI,GAAG9B,OAAO,CAAC,cAAD,CAAP,CAAwB+B,IAAnC;;AACA,aAAOvC,MAAM,CAACwC,MAAP,CAAcJ,EAAd,EAAkB;AAAEG,QAAAA,IAAI,EAAED;AAAR,OAAlB,CAAP;AACH,KAZsD;AAavDhB,IAAAA,UAAU,EAAE,KAb2C;AAcvDC,IAAAA,YAAY,EAAE;AAdyC,GAA3D;AAgBAvB,EAAAA,MAAM,CAACC,cAAP,CAAsBI,iBAAiB,CAACO,SAAxC,EAAmD,UAAnD,EAA+D;AAC3D;AACR;AACA;AACA;AACQO,IAAAA,GAAG,EAAE,YAAY;AACb,UAAIgB,KAAK,GAAG,IAAZ;;AACA,UAAIC,EAAE,GAAG,UAAUpB,GAAV,EAAe;AACpB,eAAOmB,KAAK,CAACE,SAAN,CAAgBrB,GAAhB,EAAqByB,QAArB,EAAP;AACH,OAFD,CAFa,CAKb;;;AACA,aAAOzC,MAAM,CAACwC,MAAP,CAAcJ,EAAd,EAAkB5B,OAAO,CAAC,sCAAD,CAAzB,CAAP;AACH,KAZ0D;AAa3Dc,IAAAA,UAAU,EAAE,KAb+C;AAc3DC,IAAAA,YAAY,EAAE;AAd6C,GAA/D;AAgBAvB,EAAAA,MAAM,CAACC,cAAP,CAAsBI,iBAAiB,CAACO,SAAxC,EAAmD,WAAnD,EAAgE;AAC5D;AACR;AACA;AACA;AACQO,IAAAA,GAAG,EAAE,YAAY;AACb,UAAIgB,KAAK,GAAG,IAAZ;;AACA,UAAIC,EAAE,GAAG,UAAUpB,GAAV,EAAe;AACpB,eAAOmB,KAAK,CAACE,SAAN,CAAgBrB,GAAhB,EAAqB0B,SAArB,EAAP;AACH,OAFD;;AAGA,UAAIA,SAAS,GAAGlC,OAAO,CAAC,wBAAD,CAAP,CAAkCmC,SAAlD;;AACA,aAAO3C,MAAM,CAACwC,MAAP,CAAcJ,EAAd,EAAkB;AAAEO,QAAAA,SAAS,EAAED;AAAb,OAAlB,CAAP;AACH,KAZ2D;AAa5DpB,IAAAA,UAAU,EAAE,KAbgD;AAc5DC,IAAAA,YAAY,EAAE;AAd8C,GAAhE;AAgBAvB,EAAAA,MAAM,CAACC,cAAP,CAAsBI,iBAAiB,CAACO,SAAxC,EAAmD,SAAnD,EAA8D;AAC1D;AACR;AACA;AACA;AACQO,IAAAA,GAAG,EAAE,YAAY;AACb,UAAIgB,KAAK,GAAG,IAAZ;;AACA,UAAIC,EAAE,GAAG,UAAUpB,GAAV,EAAe;AACpB,eAAOmB,KAAK,CAACE,SAAN,CAAgBrB,GAAhB,EAAqB4B,OAArB,EAAP;AACH,OAFD;;AAGA,UAAIA,OAAO,GAAGpC,OAAO,CAAC,oBAAD,CAAP,CAA8BqC,OAA5C;;AACA,aAAO7C,MAAM,CAACwC,MAAP,CAAcJ,EAAd,EAAkB;AAAES,QAAAA,OAAO,EAAED;AAAX,OAAlB,CAAP;AACH,KAZyD;AAa1DtB,IAAAA,UAAU,EAAE,KAb8C;AAc1DC,IAAAA,YAAY,EAAE;AAd4C,GAA9D;AAgBAvB,EAAAA,MAAM,CAACC,cAAP,CAAsBI,iBAAiB,CAACO,SAAxC,EAAmD,WAAnD,EAAgE;AAC5D;AACR;AACA;AACA;AACQO,IAAAA,GAAG,EAAE,YAAY;AACb,UAAIgB,KAAK,GAAG,IAAZ;;AACA,UAAIC,EAAE,GAAG,UAAUpB,GAAV,EAAe;AACpB,eAAOmB,KAAK,CAACE,SAAN,CAAgBrB,GAAhB,EAAqB8B,SAArB,EAAP;AACH,OAFD,CAFa,CAKb;;;AACA,UAAIA,SAAS,GAAGtC,OAAO,CAAC,yBAAD,CAAvB;;AACA4B,MAAAA,EAAE,GAAGpC,MAAM,CAACwC,MAAP,CAAcJ,EAAd,EAAkBU,SAAS,CAACC,SAA5B,CAAL,CAPa,CAQb;AACA;;AACA/C,MAAAA,MAAM,CAACC,cAAP,CAAsBmC,EAAtB,EAA0B,SAA1B,EAAqC;AACjCjB,QAAAA,GAAG,EAAE,YAAY;AACb,iBAAO2B,SAAS,CAACE,OAAjB;AACH;AAHgC,OAArC;AAKAhD,MAAAA,MAAM,CAACC,cAAP,CAAsBmC,EAAtB,EAA0B,IAA1B,EAAgC;AAC5BjB,QAAAA,GAAG,EAAE,YAAY;AACb,iBAAO2B,SAAS,CAACG,EAAjB;AACH;AAH2B,OAAhC;AAKA,aAAOb,EAAP;AACH,KA1B2D;AA2B5Dd,IAAAA,UAAU,EAAE,KA3BgD;AA4B5DC,IAAAA,YAAY,EAAE;AA5B8C,GAAhE;AA8BAvB,EAAAA,MAAM,CAACC,cAAP,CAAsBI,iBAAiB,CAACO,SAAxC,EAAmD,iBAAnD,EAAsE;AAClE;AACR;AACA;AACA;AACA;AACQO,IAAAA,GAAG,EAAE,YAAY;AACb,UAAIgB,KAAK,GAAG,IAAZ;;AACA,UAAIC,EAAE,GAAG,UAAUpB,GAAV,EAAe;AACpB,eAAOmB,KAAK,CAACE,SAAN,CAAgBrB,GAAhB,EAAqBkC,eAArB,EAAP;AACH,OAFD;;AAGA,UAAIA,eAAe,GAAG1C,OAAO,CAAC,sCAAD,CAAP,CAAgD2C,eAAtE;;AACA,aAAOnD,MAAM,CAACwC,MAAP,CAAcJ,EAAd,EAAkB;AAAEe,QAAAA,eAAe,EAAED;AAAnB,OAAlB,CAAP;AACH,KAbiE;AAclE5B,IAAAA,UAAU,EAAE,KAdsD;AAelEC,IAAAA,YAAY,EAAE;AAfoD,GAAtE;AAiBAvB,EAAAA,MAAM,CAACC,cAAP,CAAsBI,iBAAiB,CAACO,SAAxC,EAAmD,eAAnD,EAAoE;AAChE;AACR;AACA;AACA;AACQO,IAAAA,GAAG,EAAE,YAAY;AACb,UAAIgB,KAAK,GAAG,IAAZ;;AACA,UAAIC,EAAE,GAAG,UAAUpB,GAAV,EAAe;AACpB,eAAOmB,KAAK,CAACE,SAAN,CAAgBrB,GAAhB,EAAqBoC,aAArB,EAAP;AACH,OAFD;;AAGA,UAAIA,aAAa,GAAG5C,OAAO,CAAC,gCAAD,CAAP,CAA0C6C,aAA9D;;AACA,aAAOrD,MAAM,CAACwC,MAAP,CAAcJ,EAAd,EAAkB;AAAEiB,QAAAA,aAAa,EAAED;AAAjB,OAAlB,CAAP;AACH,KAZ+D;AAahE9B,IAAAA,UAAU,EAAE,KAboD;AAchEC,IAAAA,YAAY,EAAE;AAdkD,GAApE;AAgBAvB,EAAAA,MAAM,CAACC,cAAP,CAAsBI,iBAAiB,CAACO,SAAxC,EAAmD,YAAnD,EAAiE;AAC7D;AACR;AACA;AACA;AACQO,IAAAA,GAAG,EAAE,YAAY;AACb,UAAIgB,KAAK,GAAG,IAAZ;;AACA,UAAIC,EAAE,GAAG,UAAUpB,GAAV,EAAe;AACpB,eAAOmB,KAAK,CAACE,SAAN,CAAgBrB,GAAhB,EAAqBsC,UAArB,EAAP;AACH,OAFD;;AAGA,UAAIA,UAAU,GAAG9C,OAAO,CAAC,4BAAD,CAAP,CAAsC+C,UAAvD;;AACA,aAAOvD,MAAM,CAACwC,MAAP,CAAcJ,EAAd,EAAkB;AAAEmB,QAAAA,UAAU,EAAED;AAAd,OAAlB,CAAP;AACH,KAZ4D;AAa7DhC,IAAAA,UAAU,EAAE,KAbiD;AAc7DC,IAAAA,YAAY,EAAE;AAd+C,GAAjE;AAgBAvB,EAAAA,MAAM,CAACC,cAAP,CAAsBI,iBAAiB,CAACO,SAAxC,EAAmD,mBAAnD,EAAwE;AACpE;AACR;AACA;AACA;AACQO,IAAAA,GAAG,EAAE,YAAY;AACb,UAAIgB,KAAK,GAAG,IAAZ;;AACA,UAAIC,EAAE,GAAG,UAAUpB,GAAV,EAAe;AACpB,eAAOmB,KAAK,CAACE,SAAN,CAAgBrB,GAAhB,EAAqBwC,iBAArB,EAAP;AACH,OAFD;;AAGA,UAAIA,iBAAiB,GAAGhD,OAAO,CAAC,0CAAD,CAAP,CAAoDiD,iBAA5E;;AACA,aAAOzD,MAAM,CAACwC,MAAP,CAAcJ,EAAd,EAAkB;AAAEqB,QAAAA,iBAAiB,EAAED;AAArB,OAAlB,CAAP;AACH,KAZmE;AAapElC,IAAAA,UAAU,EAAE,KAbwD;AAcpEC,IAAAA,YAAY,EAAE;AAdsD,GAAxE;AAgBAvB,EAAAA,MAAM,CAACC,cAAP,CAAsBI,iBAAiB,CAACO,SAAxC,EAAmD,eAAnD,EAAoE;AAChE;AACR;AACA;AACA;AACQO,IAAAA,GAAG,EAAE,YAAY;AACb,UAAIgB,KAAK,GAAG,IAAZ;;AACA,UAAIC,EAAE,GAAG,UAAUpB,GAAV,EAAe;AACpB,eAAOmB,KAAK,CAACE,SAAN,CAAgBrB,GAAhB,EAAqB0C,aAArB,EAAP;AACH,OAFD;;AAGA,UAAIA,aAAa,GAAGlD,OAAO,CAAC,kCAAD,CAAP,CAA4CmD,aAAhE;;AACA,aAAO3D,MAAM,CAACwC,MAAP,CAAcJ,EAAd,EAAkB;AAAEuB,QAAAA,aAAa,EAAED;AAAjB,OAAlB,CAAP;AACH,KAZ+D;AAahEpC,IAAAA,UAAU,EAAE,KAboD;AAchEC,IAAAA,YAAY,EAAE;AAdkD,GAApE;AAgBAvB,EAAAA,MAAM,CAACC,cAAP,CAAsBI,iBAAiB,CAACO,SAAxC,EAAmD,cAAnD,EAAmE;AAC/D;AACR;AACA;AACA;AACQO,IAAAA,GAAG,EAAE,YAAY;AACb,UAAIgB,KAAK,GAAG,IAAZ;;AACA,UAAIC,EAAE,GAAG,UAAUpB,GAAV,EAAe;AACpB,eAAOmB,KAAK,CAACE,SAAN,CAAgBrB,GAAhB,EAAqB4C,YAArB,EAAP;AACH,OAFD;;AAGA,UAAIA,YAAY,GAAGpD,OAAO,CAAC,gCAAD,CAAP,CAA0CqD,YAA7D;;AACA,aAAO7D,MAAM,CAACwC,MAAP,CAAcJ,EAAd,EAAkB;AAAEyB,QAAAA,YAAY,EAAED;AAAhB,OAAlB,CAAP;AACH,KAZ8D;AAa/DtC,IAAAA,UAAU,EAAE,KAbmD;AAc/DC,IAAAA,YAAY,EAAE;AAdiD,GAAnE;AAgBAvB,EAAAA,MAAM,CAACC,cAAP,CAAsBI,iBAAiB,CAACO,SAAxC,EAAmD,UAAnD,EAA+D;AAC3D;AACR;AACA;AACA;AACQO,IAAAA,GAAG,EAAE,YAAY;AACb,UAAIgB,KAAK,GAAG,IAAZ;;AACA,UAAIC,EAAE,GAAG,UAAUpB,GAAV,EAAe;AACpB,eAAOmB,KAAK,CAACE,SAAN,CAAgBrB,GAAhB,EAAqB8C,QAArB,EAAP;AACH,OAFD;;AAGA,UAAIA,QAAQ,GAAGtD,OAAO,CAAC,wBAAD,CAAP,CAAkCuD,QAAjD;;AACA,aAAO/D,MAAM,CAACwC,MAAP,CAAcJ,EAAd,EAAkB;AAAE2B,QAAAA,QAAQ,EAAED;AAAZ,OAAlB,CAAP;AACH,KAZ0D;AAa3DxC,IAAAA,UAAU,EAAE,KAb+C;AAc3DC,IAAAA,YAAY,EAAE;AAd6C,GAA/D,EA9M+C,CA8N/C;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACIlB,EAAAA,iBAAiB,CAACO,SAAlB,CAA4BC,aAA5B,GAA4C,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AACpE,WAAO,KAAKkB,QAAL,CAAcpB,aAAd,CAA4BC,OAA5B,EAAqCC,OAArC,CAAP;AACH,GAFD;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIV,EAAAA,iBAAiB,CAACO,SAAlB,CAA4BI,GAA5B,GAAkC,UAAUD,OAAV,EAAmB;AACjD,WAAO,KAAKkB,QAAL,CAAcjB,GAAd,CAAkBD,OAAlB,CAAP;AACH,GAFD;;AAGAf,EAAAA,MAAM,CAACC,cAAP,CAAsBI,iBAAiB,CAACO,SAAxC,EAAmD,MAAnD,EAA2D;AACvD;AACR;AACA;AACQO,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKc,QAAL,CAAc+B,IAArB;AACH,KANsD;AAOvD1C,IAAAA,UAAU,EAAE,KAP2C;AAQvDC,IAAAA,YAAY,EAAE;AARyC,GAA3D;;AAUAlB,EAAAA,iBAAiB,CAACO,SAAlB,CAA4ByB,SAA5B,GAAwC,UAAUrB,GAAV,EAAe;AACnD,QAAI,OAAOA,GAAP,KAAe,WAAnB,EAAgC;AAC5BA,MAAAA,GAAG,GAAG,KAAKA,GAAL,EAAN;AACH;;AACD,WAAOA,GAAP;AACH,GALD;;AAMA,SAAOX,iBAAP;AACH,CAxQsC,EAAvC;;AAyQAH,OAAO,CAACG,iBAAR,GAA4BA,iBAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAH,OAAO,CAACE,gBAAR,GAA2B,IAAIC,iBAAJ,CAAsBE,WAAW,CAAC0D,eAAlC,CAA3B;;AACA,SAAShD,SAAT,CAAmBD,GAAnB,EAAwB;AACpB,MAAIkD,MAAM,GAAGlD,GAAb;;AACA,MAAIkD,MAAM,CAACC,UAAX,EAAuB;AACnB,WAAOD,MAAP;AACH;;AACDA,EAAAA,MAAM,CAAC5B,IAAP,GAAc,YAAY;AACtB,QAAIF,EAAE,GAAG5B,OAAO,CAAC,eAAD,CAAP,CAAyB4D,OAAlC;;AACA,WAAOhC,EAAE,CAACpB,GAAD,CAAT;AACH,GAHD;;AAIAkD,EAAAA,MAAM,CAACJ,QAAP,GAAkB,YAAY;AAC1B,QAAI1B,EAAE,GAAG5B,OAAO,CAAC,oBAAD,CAAP,CAA8B6D,WAAvC;;AACA,WAAOjC,EAAE,CAACpB,GAAD,CAAT;AACH,GAHD;;AAIAkD,EAAAA,MAAM,CAACzB,QAAP,GAAkB,UAAU6B,GAAV,EAAe;AAC7B,QAAIlC,EAAE,GAAG5B,OAAO,CAAC,mBAAD,CAAP,CAA6B+D,kBAAtC;;AACA,WAAOnC,EAAE,CAACkC,GAAD,EAAMtD,GAAN,CAAT;AACH,GAHD;;AAIAkD,EAAAA,MAAM,CAACxB,SAAP,GAAmB,YAAY;AAC3B,QAAIN,EAAE,GAAG5B,OAAO,CAAC,oBAAD,CAAP,CAA8BgE,YAAvC;;AACA,WAAOpC,EAAE,CAACpB,GAAD,CAAT;AACH,GAHD;;AAIAkD,EAAAA,MAAM,CAACtB,OAAP,GAAiB,YAAY;AACzB,QAAIR,EAAE,GAAG5B,OAAO,CAAC,kBAAD,CAAP,CAA4BiE,UAArC;;AACA,WAAOrC,EAAE,CAACpB,GAAD,CAAT;AACH,GAHD;;AAIAkD,EAAAA,MAAM,CAACpB,SAAP,GAAmB,YAAY;AAC3B,QAAIV,EAAE,GAAG5B,OAAO,CAAC,oBAAD,CAAP,CAA8BkE,YAAvC;;AACA,WAAOtC,EAAE,CAACpB,GAAD,CAAT;AACH,GAHD;;AAIAkD,EAAAA,MAAM,CAACZ,UAAP,GAAoB,YAAY;AAC5B,QAAIlB,EAAE,GAAG5B,OAAO,CAAC,sBAAD,CAAP,CAAgCmE,aAAzC;;AACA,WAAOvC,EAAE,CAACpB,GAAD,CAAT;AACH,GAHD;;AAIAkD,EAAAA,MAAM,CAACd,aAAP,GAAuB,YAAY;AAC/B,QAAIhB,EAAE,GAAG5B,OAAO,CAAC,wBAAD,CAAP,CAAkCoE,gBAA3C;;AACA,WAAOxC,EAAE,CAACpB,GAAD,CAAT;AACH,GAHD;;AAIAkD,EAAAA,MAAM,CAAChB,eAAP,GAAyB,YAAY;AACjC,QAAId,EAAE,GAAG5B,OAAO,CAAC,2BAAD,CAAP,CAAqCqE,kBAA9C;;AACA,WAAOzC,EAAE,CAACpB,GAAD,CAAT;AACH,GAHD;;AAIAkD,EAAAA,MAAM,CAACV,iBAAP,GAA2B,YAAY;AACnC,QAAIpB,EAAE,GAAG5B,OAAO,CAAC,6BAAD,CAAP,CAAuCsE,oBAAhD;;AACA,WAAO1C,EAAE,CAACpB,GAAD,CAAT;AACH,GAHD;;AAIAkD,EAAAA,MAAM,CAACR,aAAP,GAAuB,YAAY;AAC/B,QAAItB,EAAE,GAAG5B,OAAO,CAAC,yBAAD,CAAP,CAAmCuE,gBAA5C;;AACA,WAAO3C,EAAE,CAACpB,GAAD,CAAT;AACH,GAHD;;AAIAkD,EAAAA,MAAM,CAACN,YAAP,GAAsB,YAAY;AAC9B,QAAIxB,EAAE,GAAG5B,OAAO,CAAC,wBAAD,CAAP,CAAkCwE,eAA3C;;AACA,WAAO5C,EAAE,CAACpB,GAAD,CAAT;AACH,GAHD;;AAIAkD,EAAAA,MAAM,CAACC,UAAP,GAAoB,IAApB;AACA,SAAOD,MAAP;AACH","sourcesContent":["/*! firebase-admin v10.0.0 */\n\"use strict\";\n/*!\n * @license\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultNamespace = exports.FirebaseNamespace = exports.FirebaseNamespaceInternals = void 0;\nvar lifecycle_1 = require(\"./lifecycle\");\nvar credential_factory_1 = require(\"./credential-factory\");\nvar index_1 = require(\"../utils/index\");\n/**\n * Internals of a FirebaseNamespace instance.\n */\nvar FirebaseNamespaceInternals = /** @class */ (function () {\n    function FirebaseNamespaceInternals(appStore) {\n        this.appStore = appStore;\n    }\n    /**\n     * Initializes the App instance.\n     *\n     * @param options - Optional options for the App instance. If none present will try to initialize\n     *   from the FIREBASE_CONFIG environment variable. If the environment variable contains a string\n     *   that starts with '{' it will be parsed as JSON, otherwise it will be assumed to be pointing\n     *   to a file.\n     * @param appName - Optional name of the FirebaseApp instance.\n     *\n     * @returns A new App instance.\n     */\n    FirebaseNamespaceInternals.prototype.initializeApp = function (options, appName) {\n        var app = this.appStore.initializeApp(options, appName);\n        return extendApp(app);\n    };\n    /**\n     * Returns the App instance with the provided name (or the default App instance\n     * if no name is provided).\n     *\n     * @param appName - Optional name of the FirebaseApp instance to return.\n     * @returns The App instance which has the provided name.\n     */\n    FirebaseNamespaceInternals.prototype.app = function (appName) {\n        var app = this.appStore.getApp(appName);\n        return extendApp(app);\n    };\n    Object.defineProperty(FirebaseNamespaceInternals.prototype, \"apps\", {\n        /*\n         * Returns an array of all the non-deleted App instances.\n         */\n        get: function () {\n            return this.appStore.getApps().map(function (app) { return extendApp(app); });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return FirebaseNamespaceInternals;\n}());\nexports.FirebaseNamespaceInternals = FirebaseNamespaceInternals;\nvar firebaseCredential = {\n    cert: credential_factory_1.cert, refreshToken: credential_factory_1.refreshToken, applicationDefault: credential_factory_1.applicationDefault\n};\n/**\n * Global Firebase context object.\n */\nvar FirebaseNamespace = /** @class */ (function () {\n    /* tslint:enable */\n    function FirebaseNamespace(appStore) {\n        // Hack to prevent Babel from modifying the object returned as the default admin namespace.\n        /* tslint:disable:variable-name */\n        this.__esModule = true;\n        /* tslint:enable:variable-name */\n        this.credential = firebaseCredential;\n        this.SDK_VERSION = index_1.getSdkVersion();\n        /* tslint:disable */\n        // TODO(jwenger): Database is the only consumer of firebase.Promise. We should update it to use\n        // use the native Promise and then remove this.\n        this.Promise = Promise;\n        this.INTERNAL = new FirebaseNamespaceInternals(appStore !== null && appStore !== void 0 ? appStore : new lifecycle_1.AppStore());\n    }\n    Object.defineProperty(FirebaseNamespace.prototype, \"auth\", {\n        /**\n         * Gets the `Auth` service namespace. The returned namespace can be used to get the\n         * `Auth` service for the default app or an explicitly specified app.\n         */\n        get: function () {\n            var _this = this;\n            var fn = function (app) {\n                return _this.ensureApp(app).auth();\n            };\n            var auth = require('../auth/auth').Auth;\n            return Object.assign(fn, { Auth: auth });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseNamespace.prototype, \"database\", {\n        /**\n         * Gets the `Database` service namespace. The returned namespace can be used to get the\n         * `Database` service for the default app or an explicitly specified app.\n         */\n        get: function () {\n            var _this = this;\n            var fn = function (app) {\n                return _this.ensureApp(app).database();\n            };\n            // eslint-disable-next-line @typescript-eslint/no-var-requires\n            return Object.assign(fn, require('@firebase/database-compat/standalone'));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseNamespace.prototype, \"messaging\", {\n        /**\n         * Gets the `Messaging` service namespace. The returned namespace can be used to get the\n         * `Messaging` service for the default app or an explicitly specified app.\n         */\n        get: function () {\n            var _this = this;\n            var fn = function (app) {\n                return _this.ensureApp(app).messaging();\n            };\n            var messaging = require('../messaging/messaging').Messaging;\n            return Object.assign(fn, { Messaging: messaging });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseNamespace.prototype, \"storage\", {\n        /**\n         * Gets the `Storage` service namespace. The returned namespace can be used to get the\n         * `Storage` service for the default app or an explicitly specified app.\n         */\n        get: function () {\n            var _this = this;\n            var fn = function (app) {\n                return _this.ensureApp(app).storage();\n            };\n            var storage = require('../storage/storage').Storage;\n            return Object.assign(fn, { Storage: storage });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseNamespace.prototype, \"firestore\", {\n        /**\n         * Gets the `Firestore` service namespace. The returned namespace can be used to get the\n         * `Firestore` service for the default app or an explicitly specified app.\n         */\n        get: function () {\n            var _this = this;\n            var fn = function (app) {\n                return _this.ensureApp(app).firestore();\n            };\n            // eslint-disable-next-line @typescript-eslint/no-var-requires\n            var firestore = require('@google-cloud/firestore');\n            fn = Object.assign(fn, firestore.Firestore);\n            // `v1beta1` and `v1` are lazy-loaded in the Firestore SDK. We use the same trick here\n            // to avoid triggering this lazy-loading upon initialization.\n            Object.defineProperty(fn, 'v1beta1', {\n                get: function () {\n                    return firestore.v1beta1;\n                },\n            });\n            Object.defineProperty(fn, 'v1', {\n                get: function () {\n                    return firestore.v1;\n                },\n            });\n            return fn;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseNamespace.prototype, \"machineLearning\", {\n        /**\n         * Gets the `MachineLearning` service namespace. The returned namespace can be\n         * used to get the `MachineLearning` service for the default app or an\n         * explicityly specified app.\n         */\n        get: function () {\n            var _this = this;\n            var fn = function (app) {\n                return _this.ensureApp(app).machineLearning();\n            };\n            var machineLearning = require('../machine-learning/machine-learning').MachineLearning;\n            return Object.assign(fn, { MachineLearning: machineLearning });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseNamespace.prototype, \"installations\", {\n        /**\n         * Gets the `Installations` service namespace. The returned namespace can be used to get the\n         * `Installations` service for the default app or an explicitly specified app.\n         */\n        get: function () {\n            var _this = this;\n            var fn = function (app) {\n                return _this.ensureApp(app).installations();\n            };\n            var installations = require('../installations/installations').Installations;\n            return Object.assign(fn, { Installations: installations });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseNamespace.prototype, \"instanceId\", {\n        /**\n         * Gets the `InstanceId` service namespace. The returned namespace can be used to get the\n         * `Instance` service for the default app or an explicitly specified app.\n         */\n        get: function () {\n            var _this = this;\n            var fn = function (app) {\n                return _this.ensureApp(app).instanceId();\n            };\n            var instanceId = require('../instance-id/instance-id').InstanceId;\n            return Object.assign(fn, { InstanceId: instanceId });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseNamespace.prototype, \"projectManagement\", {\n        /**\n         * Gets the `ProjectManagement` service namespace. The returned namespace can be used to get the\n         * `ProjectManagement` service for the default app or an explicitly specified app.\n         */\n        get: function () {\n            var _this = this;\n            var fn = function (app) {\n                return _this.ensureApp(app).projectManagement();\n            };\n            var projectManagement = require('../project-management/project-management').ProjectManagement;\n            return Object.assign(fn, { ProjectManagement: projectManagement });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseNamespace.prototype, \"securityRules\", {\n        /**\n         * Gets the `SecurityRules` service namespace. The returned namespace can be used to get the\n         * `SecurityRules` service for the default app or an explicitly specified app.\n         */\n        get: function () {\n            var _this = this;\n            var fn = function (app) {\n                return _this.ensureApp(app).securityRules();\n            };\n            var securityRules = require('../security-rules/security-rules').SecurityRules;\n            return Object.assign(fn, { SecurityRules: securityRules });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseNamespace.prototype, \"remoteConfig\", {\n        /**\n         * Gets the `RemoteConfig` service namespace. The returned namespace can be used to get the\n         * `RemoteConfig` service for the default app or an explicitly specified app.\n         */\n        get: function () {\n            var _this = this;\n            var fn = function (app) {\n                return _this.ensureApp(app).remoteConfig();\n            };\n            var remoteConfig = require('../remote-config/remote-config').RemoteConfig;\n            return Object.assign(fn, { RemoteConfig: remoteConfig });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FirebaseNamespace.prototype, \"appCheck\", {\n        /**\n         * Gets the `AppCheck` service namespace. The returned namespace can be used to get the\n         * `AppCheck` service for the default app or an explicitly specified app.\n         */\n        get: function () {\n            var _this = this;\n            var fn = function (app) {\n                return _this.ensureApp(app).appCheck();\n            };\n            var appCheck = require('../app-check/app-check').AppCheck;\n            return Object.assign(fn, { AppCheck: appCheck });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // TODO: Change the return types to app.App in the following methods.\n    /**\n     * Initializes the FirebaseApp instance.\n     *\n     * @param options - Optional options for the FirebaseApp instance.\n     *   If none present will try to initialize from the FIREBASE_CONFIG environment variable.\n     *   If the environment variable contains a string that starts with '{' it will be parsed as JSON,\n     *   otherwise it will be assumed to be pointing to a file.\n     * @param appName - Optional name of the FirebaseApp instance.\n     *\n     * @returns A new FirebaseApp instance.\n     */\n    FirebaseNamespace.prototype.initializeApp = function (options, appName) {\n        return this.INTERNAL.initializeApp(options, appName);\n    };\n    /**\n     * Returns the FirebaseApp instance with the provided name (or the default FirebaseApp instance\n     * if no name is provided).\n     *\n     * @param appName - Optional name of the FirebaseApp instance to return.\n     * @returns The FirebaseApp instance which has the provided name.\n     */\n    FirebaseNamespace.prototype.app = function (appName) {\n        return this.INTERNAL.app(appName);\n    };\n    Object.defineProperty(FirebaseNamespace.prototype, \"apps\", {\n        /*\n         * Returns an array of all the non-deleted FirebaseApp instances.\n         */\n        get: function () {\n            return this.INTERNAL.apps;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    FirebaseNamespace.prototype.ensureApp = function (app) {\n        if (typeof app === 'undefined') {\n            app = this.app();\n        }\n        return app;\n    };\n    return FirebaseNamespace;\n}());\nexports.FirebaseNamespace = FirebaseNamespace;\n/**\n * In order to maintain backward compatibility, we instantiate a default namespace instance in\n * this module, and delegate all app lifecycle operations to it. In a future implementation where\n * the old admin namespace is no longer supported, we should remove this.\n *\n * @internal\n */\nexports.defaultNamespace = new FirebaseNamespace(lifecycle_1.defaultAppStore);\nfunction extendApp(app) {\n    var result = app;\n    if (result.__extended) {\n        return result;\n    }\n    result.auth = function () {\n        var fn = require('../auth/index').getAuth;\n        return fn(app);\n    };\n    result.appCheck = function () {\n        var fn = require('../app-check/index').getAppCheck;\n        return fn(app);\n    };\n    result.database = function (url) {\n        var fn = require('../database/index').getDatabaseWithUrl;\n        return fn(url, app);\n    };\n    result.messaging = function () {\n        var fn = require('../messaging/index').getMessaging;\n        return fn(app);\n    };\n    result.storage = function () {\n        var fn = require('../storage/index').getStorage;\n        return fn(app);\n    };\n    result.firestore = function () {\n        var fn = require('../firestore/index').getFirestore;\n        return fn(app);\n    };\n    result.instanceId = function () {\n        var fn = require('../instance-id/index').getInstanceId;\n        return fn(app);\n    };\n    result.installations = function () {\n        var fn = require('../installations/index').getInstallations;\n        return fn(app);\n    };\n    result.machineLearning = function () {\n        var fn = require('../machine-learning/index').getMachineLearning;\n        return fn(app);\n    };\n    result.projectManagement = function () {\n        var fn = require('../project-management/index').getProjectManagement;\n        return fn(app);\n    };\n    result.securityRules = function () {\n        var fn = require('../security-rules/index').getSecurityRules;\n        return fn(app);\n    };\n    result.remoteConfig = function () {\n        var fn = require('../remote-config/index').getRemoteConfig;\n        return fn(app);\n    };\n    result.__extended = true;\n    return result;\n}\n"]},"metadata":{},"sourceType":"script"}