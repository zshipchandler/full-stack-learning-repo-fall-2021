{"ast":null,"code":"/*! firebase-admin v10.0.0 */\n\"use strict\";\n/*!\n * Copyright 2020 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InstanceId = void 0;\n\nvar installations_1 = require(\"../installations\");\n\nvar error_1 = require(\"../utils/error\");\n\nvar validator = require(\"../utils/validator\");\n/**\n * The `InstanceId` service enables deleting the Firebase instance IDs\n * associated with Firebase client app instances.\n *\n * @deprecated Use {@link firebase-admin.installations#Installations} instead.\n */\n\n\nvar InstanceId =\n/** @class */\nfunction () {\n  /**\n   * @param app - The app for this InstanceId service.\n   * @constructor\n   * @internal\n   */\n  function InstanceId(app) {\n    if (!validator.isNonNullObject(app) || !('options' in app)) {\n      throw new error_1.FirebaseInstanceIdError(error_1.InstanceIdClientErrorCode.INVALID_ARGUMENT, 'First argument passed to instanceId() must be a valid Firebase app instance.');\n    }\n\n    this.app_ = app;\n  }\n  /**\n   * Deletes the specified instance ID and the associated data from Firebase.\n   *\n   * Note that Google Analytics for Firebase uses its own form of Instance ID to\n   * keep track of analytics data. Therefore deleting a Firebase Instance ID does\n   * not delete Analytics data. See\n   * {@link https://firebase.google.com/support/privacy/manage-iids#delete_an_instance_id |\n   * Delete an Instance ID}\n   * for more information.\n   *\n   * @param instanceId - The instance ID to be deleted.\n   *\n   * @returns A promise fulfilled when the instance ID is deleted.\n   */\n\n\n  InstanceId.prototype.deleteInstanceId = function (instanceId) {\n    return installations_1.getInstallations(this.app).deleteInstallation(instanceId).catch(function (err) {\n      if (err instanceof error_1.FirebaseInstallationsError) {\n        var code = err.code.replace('installations/', '');\n\n        if (code === error_1.InstallationsClientErrorCode.INVALID_INSTALLATION_ID.code) {\n          code = error_1.InstanceIdClientErrorCode.INVALID_INSTANCE_ID.code;\n        }\n\n        throw new error_1.FirebaseInstanceIdError({\n          code: code,\n          message: err.message\n        });\n      }\n\n      throw err;\n    });\n  };\n\n  Object.defineProperty(InstanceId.prototype, \"app\", {\n    /**\n     * Returns the app associated with this InstanceId instance.\n     *\n     * @returns The app associated with this InstanceId instance.\n     */\n    get: function () {\n      return this.app_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return InstanceId;\n}();\n\nexports.InstanceId = InstanceId;","map":{"version":3,"sources":["/Users/zarashipchandler/git_dir/TPEO/Week_6/homework/frontend/node_modules/firebase-admin/lib/instance-id/instance-id.js"],"names":["Object","defineProperty","exports","value","InstanceId","installations_1","require","error_1","validator","app","isNonNullObject","FirebaseInstanceIdError","InstanceIdClientErrorCode","INVALID_ARGUMENT","app_","prototype","deleteInstanceId","instanceId","getInstallations","deleteInstallation","catch","err","FirebaseInstallationsError","code","replace","InstallationsClientErrorCode","INVALID_INSTALLATION_ID","INVALID_INSTANCE_ID","message","get","enumerable","configurable"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqB,KAAK,CAA1B;;AACA,IAAIC,eAAe,GAAGC,OAAO,CAAC,kBAAD,CAA7B;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,gBAAD,CAArB;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,oBAAD,CAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIF,UAAU;AAAG;AAAe,YAAY;AACxC;AACJ;AACA;AACA;AACA;AACI,WAASA,UAAT,CAAoBK,GAApB,EAAyB;AACrB,QAAI,CAACD,SAAS,CAACE,eAAV,CAA0BD,GAA1B,CAAD,IAAmC,EAAE,aAAaA,GAAf,CAAvC,EAA4D;AACxD,YAAM,IAAIF,OAAO,CAACI,uBAAZ,CAAoCJ,OAAO,CAACK,yBAAR,CAAkCC,gBAAtE,EAAwF,8EAAxF,CAAN;AACH;;AACD,SAAKC,IAAL,GAAYL,GAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIL,EAAAA,UAAU,CAACW,SAAX,CAAqBC,gBAArB,GAAwC,UAAUC,UAAV,EAAsB;AAC1D,WAAOZ,eAAe,CAACa,gBAAhB,CAAiC,KAAKT,GAAtC,EAA2CU,kBAA3C,CAA8DF,UAA9D,EACFG,KADE,CACI,UAAUC,GAAV,EAAe;AACtB,UAAIA,GAAG,YAAYd,OAAO,CAACe,0BAA3B,EAAuD;AACnD,YAAIC,IAAI,GAAGF,GAAG,CAACE,IAAJ,CAASC,OAAT,CAAiB,gBAAjB,EAAmC,EAAnC,CAAX;;AACA,YAAID,IAAI,KAAKhB,OAAO,CAACkB,4BAAR,CAAqCC,uBAArC,CAA6DH,IAA1E,EAAgF;AAC5EA,UAAAA,IAAI,GAAGhB,OAAO,CAACK,yBAAR,CAAkCe,mBAAlC,CAAsDJ,IAA7D;AACH;;AACD,cAAM,IAAIhB,OAAO,CAACI,uBAAZ,CAAoC;AAAEY,UAAAA,IAAI,EAAEA,IAAR;AAAcK,UAAAA,OAAO,EAAEP,GAAG,CAACO;AAA3B,SAApC,CAAN;AACH;;AACD,YAAMP,GAAN;AACH,KAVM,CAAP;AAWH,GAZD;;AAaArB,EAAAA,MAAM,CAACC,cAAP,CAAsBG,UAAU,CAACW,SAAjC,EAA4C,KAA5C,EAAmD;AAC/C;AACR;AACA;AACA;AACA;AACQc,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKf,IAAZ;AACH,KAR8C;AAS/CgB,IAAAA,UAAU,EAAE,KATmC;AAU/CC,IAAAA,YAAY,EAAE;AAViC,GAAnD;AAYA,SAAO3B,UAAP;AACH,CApD+B,EAAhC;;AAqDAF,OAAO,CAACE,UAAR,GAAqBA,UAArB","sourcesContent":["/*! firebase-admin v10.0.0 */\n\"use strict\";\n/*!\n * Copyright 2020 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InstanceId = void 0;\nvar installations_1 = require(\"../installations\");\nvar error_1 = require(\"../utils/error\");\nvar validator = require(\"../utils/validator\");\n/**\n * The `InstanceId` service enables deleting the Firebase instance IDs\n * associated with Firebase client app instances.\n *\n * @deprecated Use {@link firebase-admin.installations#Installations} instead.\n */\nvar InstanceId = /** @class */ (function () {\n    /**\n     * @param app - The app for this InstanceId service.\n     * @constructor\n     * @internal\n     */\n    function InstanceId(app) {\n        if (!validator.isNonNullObject(app) || !('options' in app)) {\n            throw new error_1.FirebaseInstanceIdError(error_1.InstanceIdClientErrorCode.INVALID_ARGUMENT, 'First argument passed to instanceId() must be a valid Firebase app instance.');\n        }\n        this.app_ = app;\n    }\n    /**\n     * Deletes the specified instance ID and the associated data from Firebase.\n     *\n     * Note that Google Analytics for Firebase uses its own form of Instance ID to\n     * keep track of analytics data. Therefore deleting a Firebase Instance ID does\n     * not delete Analytics data. See\n     * {@link https://firebase.google.com/support/privacy/manage-iids#delete_an_instance_id |\n     * Delete an Instance ID}\n     * for more information.\n     *\n     * @param instanceId - The instance ID to be deleted.\n     *\n     * @returns A promise fulfilled when the instance ID is deleted.\n     */\n    InstanceId.prototype.deleteInstanceId = function (instanceId) {\n        return installations_1.getInstallations(this.app).deleteInstallation(instanceId)\n            .catch(function (err) {\n            if (err instanceof error_1.FirebaseInstallationsError) {\n                var code = err.code.replace('installations/', '');\n                if (code === error_1.InstallationsClientErrorCode.INVALID_INSTALLATION_ID.code) {\n                    code = error_1.InstanceIdClientErrorCode.INVALID_INSTANCE_ID.code;\n                }\n                throw new error_1.FirebaseInstanceIdError({ code: code, message: err.message });\n            }\n            throw err;\n        });\n    };\n    Object.defineProperty(InstanceId.prototype, \"app\", {\n        /**\n         * Returns the app associated with this InstanceId instance.\n         *\n         * @returns The app associated with this InstanceId instance.\n         */\n        get: function () {\n            return this.app_;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return InstanceId;\n}());\nexports.InstanceId = InstanceId;\n"]},"metadata":{},"sourceType":"script"}