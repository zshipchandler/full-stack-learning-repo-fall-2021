{"ast":null,"code":"/*! firebase-admin v10.0.0 */\n\"use strict\";\n/*!\n * Copyright 2021 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getInstallations = exports.Installations = void 0;\n/**\n * Firebase Instance ID service.\n *\n * @packageDocumentation\n */\n\nvar index_1 = require(\"../app/index\");\n\nvar installations_1 = require(\"./installations\");\n\nObject.defineProperty(exports, \"Installations\", {\n  enumerable: true,\n  get: function () {\n    return installations_1.Installations;\n  }\n});\n/**\n  * Gets the {@link Installations} service for the default app or a given app.\n  *\n  * `getInstallations()` can be called with no arguments to access the default\n  * app's `Installations` service or as `getInstallations(app)` to access the\n  * `Installations` service associated with a specific app.\n  *\n  * @example\n  * ```javascript\n  * // Get the Installations service for the default app\n  * const defaultInstallations = getInstallations();\n  * ```\n  *\n  * @example\n  * ```javascript\n  * // Get the Installations service for a given app\n  * const otherInstallations = getInstallations(otherApp);\n  *```\n  *\n  * @param app - Optional app whose `Installations` service to\n  *   return. If not provided, the default `Installations` service will be\n  *   returned.\n  *\n  * @returns The default `Installations` service if\n  *   no app is provided or the `Installations` service associated with the\n  *   provided app.\n  */\n\nfunction getInstallations(app) {\n  if (typeof app === 'undefined') {\n    app = index_1.getApp();\n  }\n\n  var firebaseApp = app;\n  return firebaseApp.getOrInitService('installations', function (app) {\n    return new installations_1.Installations(app);\n  });\n}\n\nexports.getInstallations = getInstallations;","map":{"version":3,"sources":["/Users/zarashipchandler/git_dir/TPEO/Week_6/homework/frontend/node_modules/firebase-admin/lib/installations/index.js"],"names":["Object","defineProperty","exports","value","getInstallations","Installations","index_1","require","installations_1","enumerable","get","app","getApp","firebaseApp","getOrInitService"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2BF,OAAO,CAACG,aAAR,GAAwB,KAAK,CAAxD;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,cAAD,CAArB;;AACA,IAAIC,eAAe,GAAGD,OAAO,CAAC,iBAAD,CAA7B;;AACAP,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,eAA/B,EAAgD;AAAEO,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,GAAG,EAAE,YAAY;AAAE,WAAOF,eAAe,CAACH,aAAvB;AAAuC;AAA9E,CAAhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASD,gBAAT,CAA0BO,GAA1B,EAA+B;AAC3B,MAAI,OAAOA,GAAP,KAAe,WAAnB,EAAgC;AAC5BA,IAAAA,GAAG,GAAGL,OAAO,CAACM,MAAR,EAAN;AACH;;AACD,MAAIC,WAAW,GAAGF,GAAlB;AACA,SAAOE,WAAW,CAACC,gBAAZ,CAA6B,eAA7B,EAA8C,UAAUH,GAAV,EAAe;AAAE,WAAO,IAAIH,eAAe,CAACH,aAApB,CAAkCM,GAAlC,CAAP;AAAgD,GAA/G,CAAP;AACH;;AACDT,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B","sourcesContent":["/*! firebase-admin v10.0.0 */\n\"use strict\";\n/*!\n * Copyright 2021 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInstallations = exports.Installations = void 0;\n/**\n * Firebase Instance ID service.\n *\n * @packageDocumentation\n */\nvar index_1 = require(\"../app/index\");\nvar installations_1 = require(\"./installations\");\nObject.defineProperty(exports, \"Installations\", { enumerable: true, get: function () { return installations_1.Installations; } });\n/**\n  * Gets the {@link Installations} service for the default app or a given app.\n  *\n  * `getInstallations()` can be called with no arguments to access the default\n  * app's `Installations` service or as `getInstallations(app)` to access the\n  * `Installations` service associated with a specific app.\n  *\n  * @example\n  * ```javascript\n  * // Get the Installations service for the default app\n  * const defaultInstallations = getInstallations();\n  * ```\n  *\n  * @example\n  * ```javascript\n  * // Get the Installations service for a given app\n  * const otherInstallations = getInstallations(otherApp);\n  *```\n  *\n  * @param app - Optional app whose `Installations` service to\n  *   return. If not provided, the default `Installations` service will be\n  *   returned.\n  *\n  * @returns The default `Installations` service if\n  *   no app is provided or the `Installations` service associated with the\n  *   provided app.\n  */\nfunction getInstallations(app) {\n    if (typeof app === 'undefined') {\n        app = index_1.getApp();\n    }\n    var firebaseApp = app;\n    return firebaseApp.getOrInitService('installations', function (app) { return new installations_1.Installations(app); });\n}\nexports.getInstallations = getInstallations;\n"]},"metadata":{},"sourceType":"script"}