{"ast":null,"code":"/*! firebase-admin v10.0.0 */\n\"use strict\";\n/*!\n * Copyright 2020 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getProjectManagement = void 0;\n/**\n * Firebase project management.\n *\n * @packageDocumentation\n */\n\nvar app_1 = require(\"../app\");\n\nvar project_management_1 = require(\"./project-management\");\n\nvar app_metadata_1 = require(\"./app-metadata\");\n\nObject.defineProperty(exports, \"AppPlatform\", {\n  enumerable: true,\n  get: function () {\n    return app_metadata_1.AppPlatform;\n  }\n});\n\nvar project_management_2 = require(\"./project-management\");\n\nObject.defineProperty(exports, \"ProjectManagement\", {\n  enumerable: true,\n  get: function () {\n    return project_management_2.ProjectManagement;\n  }\n});\n\nvar android_app_1 = require(\"./android-app\");\n\nObject.defineProperty(exports, \"AndroidApp\", {\n  enumerable: true,\n  get: function () {\n    return android_app_1.AndroidApp;\n  }\n});\nObject.defineProperty(exports, \"ShaCertificate\", {\n  enumerable: true,\n  get: function () {\n    return android_app_1.ShaCertificate;\n  }\n});\n\nvar ios_app_1 = require(\"./ios-app\");\n\nObject.defineProperty(exports, \"IosApp\", {\n  enumerable: true,\n  get: function () {\n    return ios_app_1.IosApp;\n  }\n});\n/**\n * Gets the {@link ProjectManagement} service for the default app or a given app.\n *\n * `getProjectManagement()` can be called with no arguments to access the\n * default app's `ProjectManagement` service, or as `getProjectManagement(app)` to access\n * the `ProjectManagement` service associated with a specific app.\n *\n * @example\n * ```javascript\n * // Get the ProjectManagement service for the default app\n * const defaultProjectManagement = getProjectManagement();\n * ```\n *\n * @example\n * ```javascript\n * // Get the ProjectManagement service for a given app\n * const otherProjectManagement = getProjectManagement(otherApp);\n * ```\n *\n * @param app - Optional app whose `ProjectManagement` service\n *     to return. If not provided, the default `ProjectManagement` service will\n *     be returned. *\n * @returns The default `ProjectManagement` service if no app is provided or the\n *   `ProjectManagement` service associated with the provided app.\n */\n\nfunction getProjectManagement(app) {\n  if (typeof app === 'undefined') {\n    app = app_1.getApp();\n  }\n\n  var firebaseApp = app;\n  return firebaseApp.getOrInitService('projectManagement', function (app) {\n    return new project_management_1.ProjectManagement(app);\n  });\n}\n\nexports.getProjectManagement = getProjectManagement;","map":{"version":3,"sources":["/Users/zarashipchandler/git_dir/TPEO/Week_6/homework/frontend/node_modules/firebase-admin/lib/project-management/index.js"],"names":["Object","defineProperty","exports","value","getProjectManagement","app_1","require","project_management_1","app_metadata_1","enumerable","get","AppPlatform","project_management_2","ProjectManagement","android_app_1","AndroidApp","ShaCertificate","ios_app_1","IosApp","app","getApp","firebaseApp","getOrInitService"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,oBAAR,GAA+B,KAAK,CAApC;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,KAAK,GAAGC,OAAO,CAAC,QAAD,CAAnB;;AACA,IAAIC,oBAAoB,GAAGD,OAAO,CAAC,sBAAD,CAAlC;;AACA,IAAIE,cAAc,GAAGF,OAAO,CAAC,gBAAD,CAA5B;;AACAN,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,aAA/B,EAA8C;AAAEO,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,GAAG,EAAE,YAAY;AAAE,WAAOF,cAAc,CAACG,WAAtB;AAAoC;AAA3E,CAA9C;;AACA,IAAIC,oBAAoB,GAAGN,OAAO,CAAC,sBAAD,CAAlC;;AACAN,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,mBAA/B,EAAoD;AAAEO,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,GAAG,EAAE,YAAY;AAAE,WAAOE,oBAAoB,CAACC,iBAA5B;AAAgD;AAAvF,CAApD;;AACA,IAAIC,aAAa,GAAGR,OAAO,CAAC,eAAD,CAA3B;;AACAN,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEO,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,GAAG,EAAE,YAAY;AAAE,WAAOI,aAAa,CAACC,UAArB;AAAkC;AAAzE,CAA7C;AACAf,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,gBAA/B,EAAiD;AAAEO,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,GAAG,EAAE,YAAY;AAAE,WAAOI,aAAa,CAACE,cAArB;AAAsC;AAA7E,CAAjD;;AACA,IAAIC,SAAS,GAAGX,OAAO,CAAC,WAAD,CAAvB;;AACAN,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,QAA/B,EAAyC;AAAEO,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,GAAG,EAAE,YAAY;AAAE,WAAOO,SAAS,CAACC,MAAjB;AAA0B;AAAjE,CAAzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASd,oBAAT,CAA8Be,GAA9B,EAAmC;AAC/B,MAAI,OAAOA,GAAP,KAAe,WAAnB,EAAgC;AAC5BA,IAAAA,GAAG,GAAGd,KAAK,CAACe,MAAN,EAAN;AACH;;AACD,MAAIC,WAAW,GAAGF,GAAlB;AACA,SAAOE,WAAW,CAACC,gBAAZ,CAA6B,mBAA7B,EAAkD,UAAUH,GAAV,EAAe;AAAE,WAAO,IAAIZ,oBAAoB,CAACM,iBAAzB,CAA2CM,GAA3C,CAAP;AAAyD,GAA5H,CAAP;AACH;;AACDjB,OAAO,CAACE,oBAAR,GAA+BA,oBAA/B","sourcesContent":["/*! firebase-admin v10.0.0 */\n\"use strict\";\n/*!\n * Copyright 2020 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getProjectManagement = void 0;\n/**\n * Firebase project management.\n *\n * @packageDocumentation\n */\nvar app_1 = require(\"../app\");\nvar project_management_1 = require(\"./project-management\");\nvar app_metadata_1 = require(\"./app-metadata\");\nObject.defineProperty(exports, \"AppPlatform\", { enumerable: true, get: function () { return app_metadata_1.AppPlatform; } });\nvar project_management_2 = require(\"./project-management\");\nObject.defineProperty(exports, \"ProjectManagement\", { enumerable: true, get: function () { return project_management_2.ProjectManagement; } });\nvar android_app_1 = require(\"./android-app\");\nObject.defineProperty(exports, \"AndroidApp\", { enumerable: true, get: function () { return android_app_1.AndroidApp; } });\nObject.defineProperty(exports, \"ShaCertificate\", { enumerable: true, get: function () { return android_app_1.ShaCertificate; } });\nvar ios_app_1 = require(\"./ios-app\");\nObject.defineProperty(exports, \"IosApp\", { enumerable: true, get: function () { return ios_app_1.IosApp; } });\n/**\n * Gets the {@link ProjectManagement} service for the default app or a given app.\n *\n * `getProjectManagement()` can be called with no arguments to access the\n * default app's `ProjectManagement` service, or as `getProjectManagement(app)` to access\n * the `ProjectManagement` service associated with a specific app.\n *\n * @example\n * ```javascript\n * // Get the ProjectManagement service for the default app\n * const defaultProjectManagement = getProjectManagement();\n * ```\n *\n * @example\n * ```javascript\n * // Get the ProjectManagement service for a given app\n * const otherProjectManagement = getProjectManagement(otherApp);\n * ```\n *\n * @param app - Optional app whose `ProjectManagement` service\n *     to return. If not provided, the default `ProjectManagement` service will\n *     be returned. *\n * @returns The default `ProjectManagement` service if no app is provided or the\n *   `ProjectManagement` service associated with the provided app.\n */\nfunction getProjectManagement(app) {\n    if (typeof app === 'undefined') {\n        app = app_1.getApp();\n    }\n    var firebaseApp = app;\n    return firebaseApp.getOrInitService('projectManagement', function (app) { return new project_management_1.ProjectManagement(app); });\n}\nexports.getProjectManagement = getProjectManagement;\n"]},"metadata":{},"sourceType":"script"}